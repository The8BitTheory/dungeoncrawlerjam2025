#RetroDevStudio.MetaData.BASIC:7169,BASIC V7.0 VDC,uppercase,10,10
10 FD=0:PP=26

30 GRAPHIC0:GOSUB 10000

40 REM CL=CHECKLIST:RL=RENDERLIST:M=MAP:VL=VIEWLIST

50 W=8:DIM CL(3),RL(5,2),M(63),V(3,19),P(7)

65 FOR X=0TO63:READ MV:M(X)=MV:NEXT


75 FOR X=0TO7:READ MV:P(X)=MV:NEXT


#  FACING NORTH
80 L=-1:R=-L:F=-W:B=-F:D=0:GOSUB 90
#  FACING EAST
81 L=-W:R=-L:F=1:B=-F:D=1:GOSUB 90
#  FACING SOUTH
82 L=1:R=-1:F=W:B=-F:D=2:GOSUB 90
#  FACING WEST
83 L=W:R=-L:F=-1:B=-F:D=3:GOSUB 90

84 GOTO 100


#  DIRECTION MAPPING COORDINATES
90 V(D,1)=L:V(D,2)=R
91 V(D,3)=L+F:V(D,4)=F:V(D,5)=R+F
92 V(D,6)=V(D,3):V(D,7)=V(D,5)
93 V(D,8)=L+F+F:V(D,9)=V(D,8):V(D,10)=F+F:V(D,11)=F+F+R:V(D,12)=V(D,11)
94 V(D,13)=F+F+L:V(D,14)=F+F+R
95 V(D,15)=L+F+F+F:V(D,16)=V(D,15):V(D,17)=F+F+F:V(D,18)=F+F+F+R:V(D,19)=V(D,18)
96 RETURN


# BUILD ARRAY FOR RENDERLIST
100 FOR X=0TO5:FORY=0TO2:READMV:RL(X,Y)=MV:NEXT:NEXT



230 FD=0:GOSUB 391
240 DO:MV=0:SLOW:GETKEY I$:I=ASC(I$):FAST

#   LOOK LEFT/RIGHT
#250 IF ASC(I$)=157 THEN FD=FD-1:IF FD<0 THEN FD=3
#260 IF ASC(I$)=29 THEN FD=FD+1:IF FD>3 THEN FD=0
250 IF I$="Q" THEN FD=FD-1:IF FD<0 THEN FD=3
260 IF I$="E" THEN FD=FD+1:IF FD>3 THEN FD=0


#   MOVE FORWARD/BACKWARD
#270 IF ASC(I$)=145 THEN T=PP+P(FD+FD):IF M(T)=0 THEN PP=T
#280 IF ASC(I$)=17 THEN T=PP+P(FD+FD+1):IF M(T)=0 THEN PP=T
270 IF I$="W" THEN T=FNPP(0):IF M(T)=0 THEN PP=T
280 IF I$="S" THEN T=FNPP(1):IF M(T)=0 THEN PP=T

#   STRAFE LEFT/RIGHT
282 IF I$="A" THEN T2=FD:FD=FNFD(3):T=FNPP(0):FD=T2:IF M(T)=0 THEN PP=T
284 IF I$="D" THEN T2=FD:FD=FNFD(5):T=FNPP(0):FD=T2:IF M(T)=0 THEN PP=T

290 IF I$="X" THEN SLOW:GRAPHIC0:END

300 S1=TI:GOSUB 391:S1=TI-S1:PRINT "TOOK "S1" JIFFIES"

310 LOOP





390 END



#   TILE-RENDER ANALYSIS
391 ::VMF AP,0,8000

#   HERE-LEFT AND RIGHT
392 RL=0:GOSUB 620
393 RL=1:GOSUB 620

394 GOSUB 410:REM GOTO HERE-CENTER
395 RETURN


#   HERE-CENTER
410 IF FNM(4) THEN DV=4:GOSUB710:RETURN
420 RL=2:GOSUB620
430 RL=3:GOSUB620
440 GOSUB470:REM GOTO NEAR-CENTER
450 RETURN

#   NEAR-CENTER
470 IF FNM(10) THEN DV=10:GOSUB710:RETURN
480 RL=4:GOSUB620
490 RL=5:GOSUB620

#   FAR CENTER
500 IF FNM(17) THEN DV=17:GOSUB710

510 RETURN

#############################

# ADD VALUE TO RENDERLIST
620 IFRL<4THENGX=2:ELSEGX=1
630 FOR G=0TOGX
640  DV=RL(RL,G)
650  S=FN M(DV)
660  IF S THEN GOSUB710:GOTO 700
690 NEXT
700 RETURN

#   RENDER FRAME
710 DV=DV-1:BW=DM(DV,1)
720 ::VMC DA+DM(DV,0),AP+DM(DV,4),BW,DM(DV,2),80,BW
730 RETURN




##############################################


10000 REM GRAPHIC SETUP

10010 BANK 0

#10010 DEF FN MV(ZZ)=M(PP+V(FD,ZZ))>0
10020 DEF FN PA(ZZ)=7*ZZ+1
10025 DEF FN PW(ZZ)=PEEK(ZZ)+PEEK(ZZ+1)*256
10026 DEF FN M(ZZ)=M(PP+V(FD,ZZ))=1
10027 DEF FN FD(ZZ)=INT(FD+ZZ+4)-INT(INT(FD+ZZ+4)/INT(4))*INT(4)
10028 DEF FN PP(ZZ)=PP+P(FD+FD+ZZ)



10030 DD=PEEK(186)
10040 BE=FNPW(4624)
#PEEK(4624)+PEEK(4625)*256
10050 BLOAD"VDCBASIC2D.0AC6",B0,U(DD):SYSDEC("AC6")
10060 AP=0:DISP49535:ATTR AP

10070 ::RGW 0,127
10071 ::RGW4,155
10072 ::RGW6,100
10073 ::RGW7,140
10074 ::RGW9,1
10080 ::RGO 25,128:REM BITMAP MODE ON
10090 ::RGO 28,2î¸ž4:REM 64K VRAM
10100 ::RGW 36,0
10110 ::RGW DEC("1A"),DEC("FF")

10120 ::VMF 49535,15,AP:REM SETUP PIXELS
10130 ::VMF AP,0,8000:REM CLEAR ATTRIBUTE RAM
10140 DA=AP+8000


10150 FI$="WALLS.VDC"
10160 ?"LOADING "FI$"...";:BLOAD (FI$),B0,P(BE):? "DONE"

10170 FL=FNPW(174)-BE:?"LENGTH:"FL
#PEEK(174)+PEEK(175)*256-BE:?"LENGTH:"FL

10180 DC=PEEK(BE):PRINT DC " ENTRIES"
10185 DIM DM(DC-1,4)
10190 D=FNPA(DC)
10200 FL=FL-D

#10210 FAST

# ILLEGAL QUANTITY ERROR
#25844 720

# BASIC END: 29190

#     COPY WALLSET FROM RAM TO VRAM
10220 ::RTV BE+D,DA,FL

#     WRITE WALLSET-METADATA TO ARRAY
#     0,1:OFFSET
#       2:WIDTH IN BYTES (1 BYTE = 2 PIXELS)
#       3:HEIGHT IN SCANLINES
#       4:SIZE OF TILE (LENGTH IN BYTES)
#     5,6:POSITION OF TILE ON SCREEN
10230 FOR FI=0 TO DC-1
10240  PA=BE+FNPA(FI)
10250  DM(FI,0)=FNPW(PA)
10260  DM(FI,1)=PEEK(PA+2)
10270  DM(FI,2)=PEEK(PA+3)
10280  DM(FI,3)=FNPW(PA+4)
10290  DM(FI,4)=PEEK(PA+6)

10300  FOR X=0TO4:PRINT DM(FI,X);:NEXT:PRINT

10310 NEXT






10320 BANK 15
10330 RETURN




60000 DATA 1,1,1,1,1,1,1,1, 1,0,0,0,0,0,0,1, 1,1,0,1,0,1,0,1, 1,0,0,0,0,0,0,1
60001 DATA 1,0,1,0,1,1,0,1, 1,0,1,0,1,1,0,1, 1,0,0,0,0,1,0,1, 1,1,1,1,1,1,1,1

60070 DATA -8,8,1,-1,8,-8,-1,1

60080 DATA 1,3,8, 2,5,12, 6,9,15, 7,11,19, 13,16,0, 14,18,0