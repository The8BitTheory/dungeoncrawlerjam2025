#RetroDevStudio.MetaData.BASIC:7169,BASIC V7.0 VDC,uppercase,10,10
0 REM ** FI G,X,Y
1 PRINT "INSERT DISK AND PRESS KEY TO CONTINUE":GETKEY I$
10 FD%=0:PP%=35:REM PP%=109

30 GRAPHIC0:GOSUB 10000

40 REM CL=CHECKLIST:RL=RENDERLIST:M=MAP:VL=VIEWLIST

# GS%():GAMESTATE
#       1=COINS LEFT TO COLLECT

50 W=8:DIM RL%(5,2),M%(63),V%(3,19),P%(7),GS%(1)

#  MAP DATA
64 GS%(1)=0
65 FOR X=0TO63:REM 11*20-1
66  READ MV:IF MV=2 THEN GS%(1)=GS%(1)+1
67  M%(X)=MV
68 NEXT

#  NAVIGATION POSITION UPDATE DATA
75 FOR X=0TO7:READ MV:P%(X)=MV:NEXT


#  FACING NORTH
80 L=-1:R=-L:F=-W:B=-F:D=0:GOSUB 90
#  FACING EAST
81 L=-W:R=-L:F=1:B=-F:D=1:GOSUB 90
#  FACING SOUTH
82 L=1:R=-1:F=W:B=-F:D=2:GOSUB 90
#  FACING WEST
83 L=W:R=-L:F=-1:B=-F:D=3:GOSUB 90

84 GOTO 100


#  DIRECTION MAPPING COORDINATES
90 V%(D,1)=L:V%(D,2)=R
91 V%(D,3)=L+F:V%(D,4)=F:V%(D,5)=R+F
92 V%(D,6)=V%(D,3):V%(D,7)=V%(D,5)
93 V%(D,8)=L+F+F:V%(D,9)=V%(D,8):V%(D,10)=F+F:V%(D,11)=F+F+R:V%(D,12)=V%(D,11)
94 V%(D,13)=F+F+L:V%(D,14)=F+F+R
95 V%(D,15)=L+F+F+F:V%(D,16)=V%(D,15):V%(D,17)=F+F+F:V%(D,18)=F+F+F+R:V%(D,19)=V%(D,18)
96 RETURN


# BUILD ARRAY FOR RENDERLIST
100 FOR X=0TO5:FORY=0TO2:READMV:RL%(X,Y)=MV:NEXT:NEXT

110 TD$="WWEWWEWWQWWQWWQWWWWWQAAAAAEAAWWWWWQWWWQ"

#   WRITE FACING DIRECTION
220 ::VMC CA+FN TX(FD%+1)*18,AP+3*(X-1),3,6,80

#   WRITE NR OF COINS LEFT TO COLLECT
225 GOSUB 600

#   RENDER INITIAL VIEW
230 FD%=0:GOSUB 391:TX=1:S2=TI

240 DO:SLOW
#242  I$=MID$(TD$,TX,1):TX=TX+1
242  GETKEY I$
243  I=ASC(I$):FAST

#   LOOK LEFT/RIGHT
250 IF I$="Q" THEN TU%=-1:FD%=FD%-1:IF FD%<0 THEN FD%=3:GOTO300
260 IF I$="E" THEN TU%=-1:FD%=FD%+1:IF FD%>3 THEN FD%=0:GOTO300

#   MOVE FORWARD/BACKWARD
270 IF I$="W" THEN T=FNPP(0):V%=M%(T):IF V%<>1 THEN PP%=T:SU%=-1:GOTO300
280 IF I$="S" THEN T=FNPP(1):V%=M%(T):IF V%<>1 THEN PP%=T:SU%=-1:GOTO300

#   STRAFE LEFT/RIGHT
282 IF I$="A" THEN T2=FD%:FD%=FNFD(3):T=FNPP(0):FD%=T2:V%=M%(T):IF V%<>1 THEN PP%=T:SU%=-1:GOTO300
284 IF I$="D" THEN T2=FD%:FD%=FNFD(5):T=FNPP(0):FD%=T2:V%=M%(T):IF V%<>1 THEN PP%=T:SU%=-1:GOTO300

290 IF I$="X" THEN SLOW:GRAPHIC0:GOTO390

300 GOSUB 391

#   TEXT UPDATE FLAG.
301 IF TU% THEN BEGIN
302  TU%=0:TX$=FD$
304  ::VMC CA+FN TX(FD%+1)*18,AP+3*(X-1),3,6,80
308 BEND

#   SCORE UPDATE FLAG.
309 IF SU% THEN GOSUB 600

320 LOOP UNTIL TX=LEN(TD$)

390 S2=TI-S2:SLOW:PRINT "TOOK "S2 " JIFFIES":END

#1175 UNCOMPILED WITH INTEGERS
#1080 UNCOMPILED WITH REDUCED NR OF PARAMETERS
#1125 UNCOMPILED WITH AND1 FOR MOVEMENT CHECK
#1071 UNCOMPILED WITH GOTO300 FOR INPUT CHECK
#1024 UNCOMPILED WITH S REMOVED FROM RENDERING
#1021 REMOVED F% FROM TU RENDERING

#536 COMPILED WITH INTEGERS

#1186

#   TILE-RENDER ANALYSIS
391 ::VMF AP,0,8000

#   HERE-LEFT AND RIGHT
392 GX=2:RL=0:GOSUB 620
393 RL=1:GOSUB 620

394 GOSUB 410:REM GOTO HERE-CENTER

395 IF T4%=2 THEN VMC CA+32*18,AP+80*72+40,3,6,80
396 IF TA%=2 THEN VMC CA+32*18,AP+80*60+40,3,6,80

399 RETURN

#   HERE-CENTER
410 T4%=FNM(4):IF T4%=1 THEN DV=3:GOSUB710:RETURN
420 RL=2:GOSUB620
430 RL=3:GOSUB620
440 GOSUB470:REM GOTO NEAR-CENTER
450 RETURN

#   NEAR-CENTER
470 TA%=FNM(10):IF TA%=1 THEN DV=9:GOSUB710:RETURN
480 GX=1:RL=4:GOSUB620
490 RL=5:GOSUB620

#   FAR CENTER
500 IF FNM(17)=1 THEN DV=16:GOSUB710

510 RETURN

#############################

600 SU%=0:IF M%(PP%)<>2 THEN RETURN
601 M%(PP%)=0:GS%(1)=GS%(1)-1
602 TX$=MID$(STR$(GS%(1)),2)
604 FOR X=1 TO LEN(TX$)
606  ::VMC CA+FN TX(X)*18,AP+15+3*(X-1),3,6,80
608 NEXT:RETURN

# ADD VALUE TO RENDERLIST
620 FOR G=0 TO GX
640  DV=RL%(RL,G):IF FNM(DV)=1 THEN DV=DV-1:GOSUB710:GOTO 700
690 NEXT
700 RETURN

#   RENDER FRAME
710 ::VMC DA+DM%(DV,0),AP+DM%(DV,4),DM%(DV,1),DM%(DV,2),80:RETURN

# WRITE TEXT
800 FOR X=1TOLEN(TX$):F=FN TX(X)
810  VMC CA+F*18,VR(4)+3*(X-1)+TD,3,6,80
820 NEXT
830 RETURN



##############################################
# VRAM memory MAP
# 0-7999: double buffer 0 attribute ram
# 8000-15999: double buffer 1 attribute ram
# 16000-40000: "compressed" tiles AND FONT
# 
# 49535-65535: Screen RAM. statically configured for
#              - lowres in the 3d view
#              - maybe something else for text display regions

10000 REM GRAPHIC SETUP

10010 BANK 0

10020 DEF FN PA(ZZ)=7*ZZ+1
10025 DEF FN PW(ZZ)=PEEK(ZZ)+PEEK(ZZ+1)*256
10026 DEF FN M(ZZ)=M%(PP%+V%(FD%,ZZ))
10027 DEF FN FD(ZZ)=INT(FD%+ZZ+4)-INT(INT(FD%+ZZ+4)/INT(4))*INT(4)
10028 DEF FN PP(ZZ)=PP%+P%(FD%+FD%+ZZ)
10029 DEF FN TX(ZZ)=ASC(MID$(TX$,ZZ,1))-32

10030 DD=PEEK(186)
10040 BE=FNPW(4624)
10050 BLOAD"VDCBASIC2D.0AC6",B0,U(DD):SYSDEC("AC6")


10059 VR(0)=65535-160*120:VR(1)=9600:VR(2)=16000:VR(3)=8000:VR(4)=VR(0)+VR(2)
10060 AX=0:AP(0)=0:AP(1)=9600:AP=AP(AX)
10065 ::DISPVR(0)
10066 ::ATTR AP

10070 ::RGW 0,127
10071 ::RGW4,159
#     120 SCREEN-ROWS (2 SCANLINES PER ROW)
10072 ::RGW6,120
# RGW7,140
10073 ::RGW7,133

#     2 SCANLINES PER ROW
10074 ::RGW9,1

10080 ::RGO 25,128:REM BITMAP MODE ON
10090 ::RGO 28,2î¸ž4:REM 64K VRAM
10100 ::RGW 36,0
10110 ::RGW DEC("1A"),DEC("FF")


############################
# SCREEN SETUP
############################
#     16K SCREEN-RAM IS FILLED WITH BG-COLOR LEFT, FG-COLOR RIGHT (TOP 100 SCANLINES)
#      3,2K SCREEN-RAM IS FILLED WITH 0 (BOTTOM 20 SCANLINES)
10120 ::VMF VR(0),15,VR(2)
10125 ::VMF VR(0)+16000,0,3200

#     8000 BYTES ATTRIBUTE RAM ARE FILLED WITH ZERO (LOWRES EMPTY)
#     1600 BYTES ATTRIBUTE RAM ARE SET TO FG/BG COLOR
10130 ::VMF AP,0,VR(3):REM CLEAR ATTRIBUTE RAM
10135 ::VMF AP+8000,DEC("1F"),1600
10140 DA=AP+VR(2)


############################
# LOAD RESOURCES INTO VRAM
############################
10150 FI$="WALLS.VDC"
10160 ?"LOADING "FI$"...";:BLOAD (FI$),B0,P(BE)
10170 FL=FNPW(174)-BE::PRINT FL" BYTES DONE"

10180 DC=PEEK(BE):PRINT DC " ENTRIES"
10185 DIM DM%(DC-1,4)
10190 D=FNPA(DC)
10200 FL=FL-D

10210 FAST

#     COPY WALLSET FROM RAM TO VRAM
10218 CA=DA+FL
10219 PRINT "COPYING WALLSET TO VRAM ADDRESS "DA" - "CA
10220 ::RTV BE+D,DA,FL



#     WRITE WALLSET-METADATA TO ARRAY
#     0,1:OFFSET
#       2:WIDTH IN BYTES (1 BYTE = 2 PIXELS)
#       3:HEIGHT IN SCANLINES
#       4:SIZE OF TILE (LENGTH IN BYTES)
#     5,6:POSITION OF TILE ON SCREEN
10230 FOR FI=0 TO DC-1
10240  PA=BE+FNPA(FI)
10250  DM%(FI,0)=FNPW(PA)
10260  DM%(FI,1)=PEEK(PA+2)
10270  DM%(FI,2)=PEEK(PA+3)
10280  DM%(FI,3)=FNPW(PA+4)
10290  DM%(FI,4)=PEEK(PA+6)+166
10310 NEXT


10311 PRINT"LOADING FONT...";:BLOAD"FONT2.VDC",U(DD),B0,P(BE)
10312 FL=FNPW(174)-BE:PRINT FL" BYTES DONE"
10313 PRINT "COPYING FONTS TO VRAM ADDRESS "CA1
10314 ::RTV BE,CA,FL

# TD: TEXT-DELTA (OFFSET IN PIXELS TO TEXT-START)
10315 TX$="GREETINGS, CRAWLER!":TD=90:GOSUB 800

10320 FD$="NESW"

10980 SLOW:BANK 15
10990 RETURN

60000 DATA 1,1,1,1,1,1,1,1
60001 DATA 1,2,2,2,2,2,2,1
60002 DATA 1,2,2,2,2,2,2,1
60003 DATA 1,2,2,0,0,2,2,1
60004 DATA 1,2,2,0,0,2,2,1
60005 DATA 1,2,2,2,2,2,2,1
60006 DATA 1,2,2,2,2,2,2,1
60007 DATA 1,1,1,1,1,1,1,1


#60000 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
#60001 DATA 1,2,2,2,2,1,2,2,2,2,2,2,2,2,1,2,2,2,2,1
#60002 DATA 1,2,1,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,2,1
#60003 DATA 1,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1
#60004 DATA 1,2,1,2,1,1,2,1,1,0,0,1,1,2,1,1,2,1,2,1
#60005 DATA 1,2,2,2,2,2,2,1,0,0,0,0,1,2,2,2,2,2,2,1
#60006 DATA 1,2,1,2,1,1,2,1,1,1,1,1,1,2,1,1,2,1,2,1
#60007 DATA 1,2,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,1
#60008 DATA 1,2,1,1,2,1,2,1,1,1,1,1,1,2,1,2,1,1,2,1
#60009 DATA 1,2,2,2,2,1,2,2,2,2,2,2,2,2,1,2,2,2,2,1
#60010 DATA 1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1


#60070 DATA -20,20,1,-1,20,-20,-1,1
60070 DATA -8,8,1,-1,8,-8,-1,1

60080 DATA 1,3,8, 2,5,12, 6,9,15, 7,11,19, 13,16,0, 14,18,0
